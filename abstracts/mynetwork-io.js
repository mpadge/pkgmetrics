var
   GREEN = "rgba(0,255,150,0.8)",
   RED = "rgba(255,50,0,0.8)",
   BLUE = "rgba(0,150,255,0.8)",
   ORANGE = "orange";


var nodes = new vis.DataSet([
    { id: 1,
      value: 1,
      label: "adjacency matrix" },
    { id: 2,
      value: 1,
      label: "application-specific data" },
    { id: 3,
      value: 13,
      label: "application-specific data format" },
    { id: 4,
      value: 1,
      label: "arbitrary data" },
    { id: 5,
      value: 1,
      label: "binary vectors" },
    { id: 6,
      value: 1,
      label: "binned data" },
    { id: 7,
      value: 2,
      label: "categorical data" },
    { id: 8,
      value: 1,
      label: "custom graph format" },
    { id: 9,
      value: 50,
      label: "data.frame" },
    { id: 11,
      value: 3,
      label: "formula" },
    { id: 12,
      value: 1,
      label: "genetic data" },
    { id: 13,
      value: 2,
      label: "graph" },
    { id: 14,
      value: 1,
      label: "index scores" },
    { id: 15,
      value: 3,
      label: "matrix" },
    { id: 16,
      value: 9,
      label: "ML data" },
    { id: 17,
      value: 34,
      label: "model estimates" },
    { id: 18,
      value: 8,
      label: "model prediction" },
    { id: 19,
      value: 3,
      label: "model predictions" },
    { id: 20,
      value: 1,
      label: "network" },
    { id: 21,
      value: 1,
      label: "numeric & categorical variables" },
    { id: 22,
      value: 6,
      label: "numeric variables" },
    { id: 23,
      value: 8,
      label: "numeric vector" },
    { id: 24,
      value: 13,
      label: "numeric vectors" },
    { id: 26,
      value: 5,
      label: "parameters" },
    { id: 27,
      value: 1,
      label: "populations" },
    { id: 28,
      value: 1,
      label: "probability" },
    { id: 29,
      value: 1,
      label: "probability estimates" },
    { id: 30,
      value: 1,
      label: "reports" },
    { id: 31,
      value: 1,
      label: "S3 function" },
    { id: 32,
      value: 1,
      label: "spatial data" },
    { id: 33,
      value: 1,
      label: "statistical parameters" },
    { id: 34,
      value: 52,
      label: "summary statistics" },
    { id: 35,
      value: 1,
      label: "summary web page" },
    { id: 36,
      value: 5,
      label: "time series" },
    { id: 37,
      value: 1,
      label: "trained ML model" },
    { id: 38,
      value: 1,
      label: "transformed data.frame" },
    { id: 39,
      value: 11,
      label: "visualization" },
    { id: 40,
      value: 1,
      label: "web-based visualization" }
]);



var edges = new vis.DataSet([
    { from: 26,
      to: 37,
      arrows: "to",
      value: 1 },
    { from: 26,
      to: 17,
      arrows: "to",
      value: 1 },
    { from: 26,
      to: 27,
      arrows: "to",
      value: 1 },
    { from: 26,
      to: 8,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 24,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 26,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 17,
      arrows: "to",
      value: 19 },
    { from: 9,
      to: 34,
      arrows: "to",
      value: 30 },
    { from: 9,
      to: 39,
      arrows: "to",
      value: 7 },
    { from: 9,
      to: 18,
      arrows: "to",
      value: 6 },
    { from: 9,
      to: 31,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 20,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 1,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 19,
      arrows: "to",
      value: 2 },
    { from: 9,
      to: 38,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 40,
      arrows: "to",
      value: 1 },
    { from: 9,
      to: 14,
      arrows: "to",
      value: 1 },
    { from: 23,
      to: 17,
      arrows: "to",
      value: 4 },
    { from: 23,
      to: 34,
      arrows: "to",
      value: 5 },
    { from: 23,
      to: 31,
      arrows: "to",
      value: 1 },
    { from: 15,
      to: 17,
      arrows: "to",
      value: 1 },
    { from: 15,
      to: 34,
      arrows: "to",
      value: 2 },
    { from: 15,
      to: 39,
      arrows: "to",
      value: 1 },
    { from: 15,
      to: 18,
      arrows: "to",
      value: 1 },
    { from: 36,
      to: 17,
      arrows: "to",
      value: 4 },
    { from: 36,
      to: 34,
      arrows: "to",
      value: 3 },
    { from: 36,
      to: 19,
      arrows: "to",
      value: 1 },
    { from: 7,
      to: 17,
      arrows: "to",
      value: 2 },
    { from: 7,
      to: 34,
      arrows: "to",
      value: 2 },
    { from: 16,
      to: 17,
      arrows: "to",
      value: 2 },
    { from: 16,
      to: 34,
      arrows: "to",
      value: 5 },
    { from: 16,
      to: 39,
      arrows: "to",
      value: 2 },
    { from: 16,
      to: 18,
      arrows: "to",
      value: 1 },
    { from: 16,
      to: 35,
      arrows: "to",
      value: 1 },
    { from: 16,
      to: 30,
      arrows: "to",
      value: 1 },
    { from: 3,
      to: 17,
      arrows: "to",
      value: 3 },
    { from: 3,
      to: 34,
      arrows: "to",
      value: 7 },
    { from: 3,
      to: 39,
      arrows: "to",
      value: 4 },
    { from: 3,
      to: 3,
      arrows: "to",
      value: 2 },
    { from: 3,
      to: 14,
      arrows: "to",
      value: 1 },
    { from: 3,
      to: 13,
      arrows: "to",
      value: 1 },
    { from: 24,
      to: 17,
      arrows: "to",
      value: 4 },
    { from: 24,
      to: 34,
      arrows: "to",
      value: 11 },
    { from: 24,
      to: 18,
      arrows: "to",
      value: 1 },
    { from: 24,
      to: 33,
      arrows: "to",
      value: 1 },
    { from: 11,
      to: 34,
      arrows: "to",
      value: 3 },
    { from: 11,
      to: 18,
      arrows: "to",
      value: 1 },
    { from: 12,
      to: 34,
      arrows: "to",
      value: 1 },
    { from: 32,
      to: 17,
      arrows: "to",
      value: 1 },
    { from: 5,
      to: 34,
      arrows: "to",
      value: 1 },
    { from: 5,
      to: 28,
      arrows: "to",
      value: 1 },
    { from: 21,
      to: 17,
      arrows: "to",
      value: 1 },
    { from: 21,
      to: 19,
      arrows: "to",
      value: 1 },
    { from: 6,
      to: 17,
      arrows: "to",
      value: 1 },
    { from: 22,
      to: 17,
      arrows: "to",
      value: 2 },
    { from: 22,
      to: 34,
      arrows: "to",
      value: 4 },
    { from: 22,
      to: 39,
      arrows: "to",
      value: 2 },
    { from: 22,
      to: 19,
      arrows: "to",
      value: 1 },
    { from: 2,
      to: 17,
      arrows: "to",
      value: 1 },
    { from: 2,
      to: 34,
      arrows: "to",
      value: 1 },
    { from: 2,
      to: 29,
      arrows: "to",
      value: 1 },
    { from: 4,
      to: 34,
      arrows: "to",
      value: 1 },
    { from: 4,
      to: 39,
      arrows: "to",
      value: 1 },
    { from: 13,
      to: 3,
      arrows: "to",
      value: 1 },
    { from: 13,
      to: 13,
      arrows: "to",
      value: 1 }
]);



var container = document.getElementById("mynetwork");
var data = {
  nodes: nodes,
  edges: edges
};
var options = {
  nodes: {
      shape: "dot",
      scaling: {
          customScalingFunction: function(min, max, total, value) {
              return value / total;
          },
          min: 5,
          max: 500,
      },
      shadow: true
  },
  edges: {
    shadow: true,
    smooth: true
  },
  physics: {
    barnesHut: { gravitationalConstant: -20000 },
    stabilization: { iterations: 2500 }
  }
};

var network = new vis.Network(container, data, options);

network.on("click", function(params) {
    var node = nodes.get(params.nodes[0]);
    if (typeof node.URL != 'undefined') {
        window.open(node.URL,'_blank');
    }
});
